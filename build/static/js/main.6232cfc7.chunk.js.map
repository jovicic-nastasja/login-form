{"version":3,"sources":["config/Fire.js","Home.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","auth","signOut","react_default","a","createElement","className","onClick","Component","Login","login","handleChange","signup","state","email","password","error","e","setState","defineProperty","target","name","value","_this2","preventDefault","signInWithEmailAndPassword","then","u","catch","err","console","log","createUserWithEmailAndPassword","htmlFor","onChange","type","id","aria-describedby","placeholder","style","marginLeft","App","user","authListener","onAuthStateChanged","localStorage","setItem","uid","removeItem","src_Home","src_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6232cfc7.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBDGQY6xt6XhJHiXdNGSSgW0NF4wiKIFiA\",\r\n    authDomain: \"login-form-82502.firebaseapp.com\",\r\n    databaseURL: \"https://login-form-82502.firebaseio.com\",\r\n    projectId: \"login-form-82502\",\r\n    storageBucket: \"login-form-82502.appspot.com\",\r\n    messagingSenderId: \"351591800454\"\r\n  };\r\nconst fire = firebase.initializeApp(config);\r\nexport default fire;","import React, { Component } from 'react';\r\nimport fire from './config/Fire';\r\n\r\nclass Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout(){\r\n        fire.auth().signOut();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Welcome to the Apps home screen</h1>\r\n                <button className=\"btn btn-danger\" onClick={this.logout}>Logout</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport fire from './config/Fire';\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.signup = this.signup.bind(this);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            error: false\r\n        };\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({[e.target.name]: e.target.value});\r\n    }\r\n\r\n    login(e){\r\n        e.preventDefault();\r\n\r\n        fire.auth().signInWithEmailAndPassword(this.state.email,this.state.password)\r\n        .then((u) => {\r\n            //upon success we can do something here if needed\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n            this.setState({error: true});\r\n        });\r\n    }\r\n\r\n    signup(e){\r\n        e.preventDefault();\r\n\r\n        fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n        .then((u) => {\r\n            // we can do something here as well\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"loginmodal-container\">\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                    <input value={this.state.email} onChange={this.handleChange} type=\"email\" name=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                    <input value={this.state.password} onChange={this.handleChange} type=\"password\" name=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\r\n                    </div>\r\n                    <span className={this.state.error ? \"error\" : \"hidden\"}>The user doesn't exist. Did you signup?</span><br/><br/>\r\n                    <button type=\"submit\" onClick={this.login} className=\"btn btn-primary\">Login</button>\r\n                    <button onClick={this.signup} style={{marginLeft: '25px'}} className=\"btn btn-success\">Signup</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport fire from './config/Fire';\nimport Home from './Home';\nimport Login from './Login';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = ({\n      user: null\n    });\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount(){\n    this.authListener();\n  }\n\n  authListener(){\n    fire.auth().onAuthStateChanged((user) => {\n      console.log(user);\n      if (user){\n        this.setState({user});\n        localStorage.setItem('user', user.uid);\n      }else{\n        this.setState({user: null});\n        localStorage.removeItem('user');\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>{this.state.user ? (<Home />) : (<Login />)}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}